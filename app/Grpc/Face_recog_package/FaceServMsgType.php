<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: face.proto

namespace App\Grpc\Face_recog_package;

use UnexpectedValueException;

/**
 * 公共数据定义和枚举
 *
 * Protobuf type <code>face_recog_package.FaceServMsgType</code>
 */
class FaceServMsgType
{
    /**
     * 类型未定义
     *
     * Generated from protobuf enum <code>FACE_TYPE_NOT_DEFINED = 0;</code>
     */
    const FACE_TYPE_NOT_DEFINED = 0;
    /**
     * 人脸检测
     *
     * Generated from protobuf enum <code>FACE_DET = 1;</code>
     */
    const FACE_DET = 1;
    /**
     * 人脸1比1
     *
     * Generated from protobuf enum <code>FACE_1VS1 = 2;</code>
     */
    const FACE_1VS1 = 2;
    /**
     * 人脸注册
     *
     * Generated from protobuf enum <code>FACE_REG = 3;</code>
     */
    const FACE_REG = 3;
    /**
     * 人脸1比N搜索
     *
     * Generated from protobuf enum <code>FACE_1VSN = 4;</code>
     */
    const FACE_1VSN = 4;

    private static $valueToName = [
        self::FACE_TYPE_NOT_DEFINED => 'FACE_TYPE_NOT_DEFINED',
        self::FACE_DET => 'FACE_DET',
        self::FACE_1VS1 => 'FACE_1VS1',
        self::FACE_REG => 'FACE_REG',
        self::FACE_1VSN => 'FACE_1VSN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

